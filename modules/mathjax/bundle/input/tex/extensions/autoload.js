(()=>{"use strict";var o={d:(e,t)=>{for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o:(o,e)=>Object.prototype.hasOwnProperty.call(o,e),r:o=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})}},e={};o.r(e),o.d(e,{AutoloadConfiguration:()=>C});const t=("undefined"!=typeof window?window:global).MathJax._.components.global,a=(t.GLOBAL,t.isObject,t.combineConfig,t.combineDefaults,t.combineWithMathJax),n=(t.MathJax,MathJax._.input.tex.HandlerTypes),r=n.ConfigurationType,i=n.HandlerType,s=MathJax._.input.tex.Configuration,c=s.Configuration,l=(s.ConfigurationHandler,s.ParserConfiguration,MathJax._.input.tex.TokenMap),p=(l.parseResult,l.AbstractTokenMap,l.RegExpMap,l.AbstractParseMap,l.CharacterMap,l.DelimiterMap,l.MacroMap,l.CommandMap),u=(l.EnvironmentMap,MathJax._.input.tex.Token),d=(u.Token,u.Macro),f=MathJax._.input.tex.require.RequireConfiguration,b=f.RequireLoad,x=(f.RequireMethods,f.options,f.RequireConfiguration),m=MathJax._.components.package,g=(m.PackageError,m.Package),h=MathJax._.util.Options,M=(h.isObject,h.APPEND,h.REMOVE,h.OPTIONS,h.Expandable,h.expandable),O=(h.makeArray,h.keys,h.copy,h.insert,h.defaultOptions);h.userOptions,h.selectOptions,h.selectOptionsFromKeys,h.separateOptions,h.lookup;function y(o,e,t,a){if(g.packages.has(o.options.require.prefix+t)){const n=o.options.autoload[t],[r,i]=2===n.length&&Array.isArray(n[0])?n:[n,[]];for(const o of r)k.remove(o);for(const o of i)w.remove(o);o.string=(a?e+" ":"\\begin{"+e.slice(1)+"}")+o.string.slice(o.i),o.i=0}b(o,t)}const k=new p("autoload-macros",{}),w=new p("autoload-environments",{}),C=c.create("autoload",{[r.HANDLER]:{[i.MACRO]:["autoload-macros"],[i.ENVIRONMENT]:["autoload-environments"]},[r.OPTIONS]:{autoload:M({action:["toggle","mathtip","texttip"],amscd:[[],["CD"]],bbox:["bbox"],boldsymbol:["boldsymbol"],braket:["bra","ket","braket","set","Bra","Ket","Braket","Set","ketbra","Ketbra"],bussproofs:[[],["prooftree"]],cancel:["cancel","bcancel","xcancel","cancelto"],color:["color","definecolor","textcolor","colorbox","fcolorbox"],enclose:["enclose"],extpfeil:["xtwoheadrightarrow","xtwoheadleftarrow","xmapsto","xlongequal","xtofrom","Newextarrow"],html:["data","href","class","style","cssId"],mhchem:["ce","pu"],newcommand:["newcommand","renewcommand","newenvironment","renewenvironment","def","let"],unicode:["unicode","U","char"],verb:["verb"]})},[r.CONFIG]:function(o,e){const t=e.parseOptions,a=t.handlers.get(i.MACRO),n=t.handlers.get(i.ENVIRONMENT),r=t.options.autoload;t.packageData.set("autoload",{Autoload:y});for(const o of Object.keys(r)){const e=r[o],[t,i]=2===e.length&&Array.isArray(e[0])?e:[e,[]];for(const e of t)a.lookup(e)&&"color"!==e||k.add(e,new d(e,y,[o,!0]));for(const e of i)n.lookup(e)||w.add(e,new d(e,y,[o,!1]))}t.packageData.get("require")||x.config(o,e)},[r.INIT]:function(o){o.options.require||O(o.options,x.options)},[r.PRIORITY]:10});MathJax.loader&&MathJax.loader.checkVersion("[tex]/autoload","4.0.0","tex-extension"),a({_:{input:{tex:{autoload:{AutoloadConfiguration:e}}}}})})();