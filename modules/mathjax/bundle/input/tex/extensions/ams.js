(()=>{"use strict";var t={d:(e,a)=>{for(var r in a)t.o(a,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:a[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{FlalignItem:()=>w,MultlineItem:()=>v});var a={};t.r(a),t.d(a,{AmsMethods:()=>O});var r={};t.r(r),t.d(r,{AmsConfiguration:()=>K,AmsTags:()=>X});const n=("undefined"!=typeof window?window:global).MathJax._.components.global,i=(n.GLOBAL,n.isObject,n.combineConfig,n.combineDefaults,n.combineWithMathJax),l=(n.MathJax,MathJax._.input.tex.HandlerTypes),o=l.ConfigurationType,s=l.HandlerType,m=MathJax._.input.tex.Configuration,c=m.Configuration,h=(m.ConfigurationHandler,m.ParserConfiguration,MathJax._.input.tex.base.BaseItems),d=(h.StartItem,h.StopItem,h.OpenItem,h.CloseItem,h.NullItem,h.PrimeItem,h.SubsupItem,h.OverItem,h.LeftItem,h.Middle,h.RightItem,h.BreakItem,h.BeginItem,h.EndItem,h.StyleItem,h.PositionItem,h.CellItem,h.MmlItem,h.FnItem,h.NotItem,h.NonscriptItem,h.DotsItem,h.ArrayItem),g=h.EqnArrayItem,u=(h.MstyleItem,h.EquationItem,MathJax._.input.tex.ParseUtil),p=(u.KeyValueDef,u.KeyValueTypes,u.ParseUtil),A=MathJax._.input.tex.NodeUtil.default,f=MathJax._.input.tex.TexError.default,b=MathJax._.input.tex.TexConstants.TexConstant;class v extends d{constructor(t,...e){super(t),this.factory.configuration.tags.start("multline",!0,e[0])}get kind(){return"multline"}EndEntry(){this.table.length&&p.fixInitialMO(this.factory.configuration,this.nodes);const t=this.getProperty("shove"),e=this.create("node","mtd",this.nodes,t?{columnalign:t}:{});this.setProperty("shove",null),this.row.push(e),this.Clear()}EndRow(){if(1!==this.row.length)throw new f("MultlineRowsOneCol","The rows within the %1 environment must have exactly one column","multline");const t=this.create("node","mtr",this.row);this.table.push(t),this.row=[]}EndTable(){if(super.EndTable(),this.table.length){const t=this.table.length-1;let e=-1;A.getAttribute(A.getChildren(this.table[0])[0],"columnalign")||A.setAttribute(A.getChildren(this.table[0])[0],"columnalign",b.Align.LEFT),A.getAttribute(A.getChildren(this.table[t])[0],"columnalign")||A.setAttribute(A.getChildren(this.table[t])[0],"columnalign",b.Align.RIGHT);const a=this.factory.configuration.tags.getTag();if(a){e=this.arraydef.side===b.Align.LEFT?0:this.table.length-1;const t=this.table[e],r=this.create("node","mlabeledtr",[a].concat(A.getChildren(t)));A.copyAttributes(t,r),this.table[e]=r}}this.factory.configuration.tags.end()}}class w extends g{get kind(){return"flalign"}constructor(t,e,a,r,n){super(t),this.name=e,this.numbered=a,this.padded=r,this.center=n,this.factory.configuration.tags.start(e,a,a)}EndEntry(){super.EndEntry();const t=this.getProperty("xalignat");if(t&&this.row.length>t)throw new f("XalignOverflow","Extra %1 in row of %2","&",this.name)}EndRow(){let t;const e=this.row,a=this.getProperty("xalignat");for(;e.length<a;)e.push(this.create("node","mtd"));for(this.row=[],this.padded&&this.row.push(this.create("node","mtd"));t=e.shift();)this.row.push(t),t=e.shift(),t&&this.row.push(t),(e.length||this.padded)&&this.row.push(this.create("node","mtd"));this.row.length>this.maxrow&&(this.maxrow=this.row.length),super.EndRow();const r=this.table[this.table.length-1];if(this.getProperty("zeroWidthLabel")&&r.isKind("mlabeledtr")){const t=A.getChildren(r)[0],e=this.factory.configuration.options.tagSide,a=Object.assign({width:0},"right"===e?{lspace:"-1width"}:{}),n=this.create("node","mpadded",A.getChildren(t),a);t.setChildren([n])}}EndTable(){if(super.EndTable(),this.center&&this.maxrow<=2){delete this.arraydef.width,delete this.global.indentalign}}}const y=MathJax._.input.tex.Tags,q=(y.Label,y.TagInfo,y.AbstractTags),x=(y.NoTags,y.AllTags,y.TagsFactory,MathJax._.input.tex.UnitUtil.UnitUtil),M=MathJax._.input.tex.ParseMethods.default,C=MathJax._.input.tex.TexParser.default,I=MathJax._.input.tex.base.BaseMethods,S=I.splitAlignArray,T=I.default,E=MathJax._.core.MmlTree.MmlNode,N=E.TEXCLASS,P=(E.TEXCLASSNAMES,E.MATHVARIANTS,E.indentAttributes,E.AbstractMmlNode,E.AbstractMmlTokenNode,E.AbstractMmlLayoutNode,E.AbstractMmlBaseNode,E.AbstractMmlEmptyNode,E.TextNode,E.XMLNode,MathJax._.input.tex.newcommand.NewcommandUtil),k=(P.NewcommandTables,P.NewcommandPriority,P.NewcommandUtil);function F(t){if(!t||t.isInferred&&0===t.childNodes.length)return[null,null];if(t.isKind("msubsup")&&L(t))return[t,null];const e=A.getChildAt(t,0);return t.isInferred&&e&&L(e)?(t.childNodes.splice(0,1),[e,t]):[null,t]}function L(t){const e=t.childNodes[0];return e&&e.isKind("mi")&&""===e.getText()}const O={AmsEqnArray(t,e,a,r,n,i,l,o){const s=t.GetBrackets("\\begin{"+e.getName()+"}"),m=T.EqnArray(t,e,a,r,n,i,l,o);return p.setArrayAlign(m,s,t)},AlignAt(t,e,a,r){const n=e.getName();let i,l="",o="";const s=[];r||(i=t.GetBrackets("\\begin{"+n+"}"));const m=t.GetArgument("\\begin{"+n+"}");if(m.match(/[^0-9]/))throw new f("PositiveIntegerArg","Argument to %1 must be a positive integer","\\begin{"+n+"}");let c=parseInt(m,10);for(;c>0;)l+="rl",o+="bt",s.push("0em 0em"),c--;const h=s.join(" ");if(r)return O.EqnArray(t,e,a,r,l,o,h);const d=O.EqnArray(t,e,a,r,l,o,h);return p.setArrayAlign(d,i,t)},Multline(t,e,a){p.checkEqnEnv(t),t.Push(e);const r=t.options.ams.multlineIndent,n=t.itemFactory.create("multline",a,t.stack);return n.arraydef={displaystyle:!0,rowspacing:".5em",columnspacing:"100%",width:t.options.ams.multlineWidth,side:t.options.tagSide,minlabelspacing:t.options.tagIndent,"data-array-padding":`${r} ${r}`,"data-width-includes-label":!0},n},XalignAt(t,e,a,r){const n=t.GetArgument("\\begin{"+e.getName()+"}");if(n.match(/[^0-9]/))throw new f("PositiveIntegerArg","Argument to %1 must be a positive integer","\\begin{"+e.getName()+"}");const i=r?"crl":"rlc",l=r?"mbt":"btm",o=r?"fit auto auto":"auto auto fit",s=O.FlalignArray(t,e,a,r,!1,i,l,o,!0);return s.setProperty("xalignat",2*parseInt(n)),s},FlalignArray(t,e,a,r,n,i,l,o,s=!1){p.checkEqnEnv(t),t.Push(e),i=i.split("").join(" ").replace(/r/g,"right").replace(/l/g,"left").replace(/c/g,"center"),l=S(l);const m=t.itemFactory.create("flalign",e.getName(),a,r,n,t.stack);return m.arraydef={width:"100%",displaystyle:!0,columnalign:i,columnspacing:"0em",columnwidth:o,rowspacing:"3pt","data-break-align":l,side:t.options.tagSide,minlabelspacing:s?"0":t.options.tagIndent,"data-width-includes-label":!0},m.setProperty("zeroWidthLabel",s),m},HandleDeclareOp(t,e){const a=t.GetStar()?"*":"",r=k.GetCsNameArgument(t,e),n=t.GetArgument(e);k.addMacro(t,r,O.Macro,[`\\operatorname${a}{${n}}`]),t.Push(t.itemFactory.create("null"))},HandleOperatorName(t,e){const a=t.GetStar(),r=x.trimSpaces(t.GetArgument(e));let n=new C(r,Object.assign(Object.assign({},t.stack.env),{font:b.Variant.NORMAL,multiLetterIdentifiers:t.options.ams.operatornamePattern,operatorLetters:!0}),t.configuration).mml();if(n.isKind("mi")||(n=t.create("node","TeXAtom",[n])),A.setProperties(n,{movesupsub:a,movablelimits:!0,texClass:N.OP}),!a){const e=t.GetNext(),a=t.i;"\\"===e&&++t.i&&"limits"!==t.GetCS()&&(t.i=a)}t.Push(t.itemFactory.create("fn",n))},SideSet(t,e){const[a,r]=F(t.ParseArg(e)),[n,i]=F(t.ParseArg(e)),l=t.ParseArg(e);let o=l;a&&(r?a.replaceChild(t.create("node","mphantom",[t.create("node","mpadded",[p.copyNode(l,t)],{width:0})]),A.getChildAt(a,0)):(o=t.create("node","mmultiscripts",[l]),n&&A.appendChildren(o,[A.getChildAt(n,1)||t.create("node","none"),A.getChildAt(n,2)||t.create("node","none")]),A.setProperty(o,"scriptalign","left"),A.appendChildren(o,[t.create("node","mprescripts"),A.getChildAt(a,1)||t.create("node","none"),A.getChildAt(a,2)||t.create("node","none")]))),n&&o===l&&(n.replaceChild(l,A.getChildAt(n,0)),o=n);const s=t.create("node","TeXAtom",[],{texClass:N.OP,movesupsub:!0,movablelimits:!0});r&&(a&&s.appendChild(a),s.appendChild(r)),s.appendChild(o),i&&s.appendChild(i),t.Push(s)},operatorLetter:(t,e)=>!!t.stack.env.operatorLetters&&M.variable(t,e),MultiIntegral(t,e,a){let r=t.GetNext();if("\\"===r){const n=t.i;r=t.GetArgument(e),t.i=n,"\\limits"===r&&(a="\\!\\!\\mathop{\\,\\,"+a+"}")}t.string=a+" "+t.string.slice(t.i),t.i=0},xArrow(t,e,a,r,n,i=0){const l={width:"+"+x.em((r+n)/18),lspace:x.em(r/18)},o=t.GetBrackets(e),s=t.ParseArg(e),m=t.create("node","mspace",[],{depth:".2em"});let c=t.create("token","mo",{stretchy:!0,texClass:N.REL},String.fromCodePoint(a));i&&c.attributes.set("minsize",x.em(i)),c=t.create("node","mstyle",[c],{scriptlevel:0});const h=t.create("node","munderover",[c]);let d=t.create("node","mpadded",[s,m],l);if(A.setAttribute(d,"voffset","-.2em"),A.setAttribute(d,"height","-.2em"),A.setChild(h,h.over,d),o){const e=new C(o,t.stack.env,t.configuration).mml(),a=t.create("node","mspace",[],{height:".75em"});d=t.create("node","mpadded",[e,a],l),A.setAttribute(d,"voffset",".15em"),A.setAttribute(d,"depth","-.15em"),A.setChild(h,h.under,d)}A.setProperty(h,"subsupOK",!0),t.Push(h)},HandleShove(t,e,a){const r=t.stack.Top();if("multline"!==r.kind)throw new f("CommandOnlyAllowedInEnv","%1 only allowed in %2 environment",t.currentCS,"multline");if(r.Size())throw new f("CommandAtTheBeginingOfLine","%1 must come at the beginning of the line",t.currentCS);r.setProperty("shove",a)},CFrac(t,e){let a=x.trimSpaces(t.GetBrackets(e,""));const r=t.GetArgument(e),n=t.GetArgument(e),i={l:b.Align.LEFT,r:b.Align.RIGHT,"":""},l=new C("\\strut\\textstyle{"+r+"}",t.stack.env,t.configuration).mml(),o=new C("\\strut\\textstyle{"+n+"}",t.stack.env,t.configuration).mml(),s=t.create("node","mfrac",[l,o]);if(a=i[a],null==a)throw new f("IllegalAlign","Illegal alignment specified in %1",t.currentCS);a&&A.setProperties(s,{numalign:a,denomalign:a}),t.Push(s)},Genfrac(t,e,a,r,n,i){null==a&&(a=t.GetDelimiterArg(e)),null==r&&(r=t.GetDelimiterArg(e)),null==n&&(n=t.GetArgument(e)),null==i&&(i=x.trimSpaces(t.GetArgument(e)));const l=t.ParseArg(e),o=t.ParseArg(e);let s=t.create("node","mfrac",[l,o]);if(""!==n&&A.setAttribute(s,"linethickness",n),(a||r)&&(A.setProperty(s,"withDelims",!0),s=p.fixedFence(t.configuration,a,s,r)),""!==i){const e=parseInt(i,10),a=["D","T","S","SS"][e];if(null==a)throw new f("BadMathStyleFor","Bad math style for %1",t.currentCS);s=t.create("node","mstyle",[s]),"D"===a?A.setProperties(s,{displaystyle:!0,scriptlevel:0}):A.setProperties(s,{displaystyle:!1,scriptlevel:e-1})}t.Push(s)},HandleTag(t,e){if(!t.tags.currentTag.taggable&&t.tags.env)throw new f("CommandNotAllowedInEnv","%1 not allowed in %2 environment",t.currentCS,t.tags.env);if(t.tags.currentTag.tag)throw new f("MultipleCommand","Multiple %1",t.currentCS);const a=t.GetStar(),r=x.trimSpaces(t.GetArgument(e));t.tags.tag(r,a),t.Push(t.itemFactory.create("null"))},HandleNoTag:T.HandleNoTag,HandleRef:T.HandleRef,Macro:T.Macro,Accent:T.Accent,Tilde:T.Tilde,Array:T.Array,Spacer:T.Spacer,NamedOp:T.NamedOp,EqnArray:T.EqnArray,Equation:T.Equation},G=MathJax._.input.tex.TokenMap,R=(G.parseResult,G.AbstractTokenMap,G.RegExpMap),V=(G.AbstractParseMap,G.CharacterMap),D=G.DelimiterMap,H=(G.MacroMap,G.CommandMap),J=G.EnvironmentMap,_=MathJax._.util.lengths,B=(_.BIGDIMEN,_.UNITS,_.RELUNITS,_.MATHSPACE);_.length2em,_.percent,_.em,_.px;new V("AMSmath-mathchar0mo",M.mathchar0mo,{iiiint:["\u2a0c",{texClass:N.OP}]}),new R("AMSmath-operatorLetter",O.operatorLetter,/[-*]/i),new H("AMSmath-macros",{mathring:[O.Accent,"02DA"],nobreakspace:O.Tilde,negmedspace:[O.Spacer,B.negativemediummathspace],negthickspace:[O.Spacer,B.negativethickmathspace],idotsint:[O.MultiIntegral,"\\int\\cdots\\int"],dddot:[O.Accent,"20DB"],ddddot:[O.Accent,"20DC"],sideset:O.SideSet,boxed:[O.Macro,"\\fbox{$\\displaystyle{#1}$}",1],tag:O.HandleTag,notag:O.HandleNoTag,eqref:[O.HandleRef,!0],substack:[O.Macro,"\\begin{subarray}{c}#1\\end{subarray}",1],injlim:[O.NamedOp,"inj&thinsp;lim"],projlim:[O.NamedOp,"proj&thinsp;lim"],varliminf:[O.Macro,"\\mathop{\\underline{\\mmlToken{mi}{lim}}}"],varlimsup:[O.Macro,"\\mathop{\\overline{\\mmlToken{mi}{lim}}}"],varinjlim:[O.Macro,"\\mathop{\\underrightarrow{\\mmlToken{mi}{lim}}}"],varprojlim:[O.Macro,"\\mathop{\\underleftarrow{\\mmlToken{mi}{lim}}}"],DeclareMathOperator:O.HandleDeclareOp,operatorname:O.HandleOperatorName,genfrac:O.Genfrac,frac:[O.Genfrac,"","","",""],tfrac:[O.Genfrac,"","","","1"],dfrac:[O.Genfrac,"","","","0"],binom:[O.Genfrac,"(",")","0",""],tbinom:[O.Genfrac,"(",")","0","1"],dbinom:[O.Genfrac,"(",")","0","0"],cfrac:O.CFrac,shoveleft:[O.HandleShove,b.Align.LEFT],shoveright:[O.HandleShove,b.Align.RIGHT],xrightarrow:[O.xArrow,8594,5,10],xleftarrow:[O.xArrow,8592,10,5]}),new J("AMSmath-environment",M.environment,{"equation*":[O.Equation,null,!1],"eqnarray*":[O.EqnArray,null,!1,!0,"rcl","bmt",p.cols(0,B.thickmathspace),".5em"],align:[O.EqnArray,null,!0,!0,"rl","bt",p.cols(0,2)],"align*":[O.EqnArray,null,!1,!0,"rl","bt",p.cols(0,2)],multline:[O.Multline,null,!0],"multline*":[O.Multline,null,!1],split:[O.EqnArray,null,!1,!1,"rl","bt",p.cols(0)],gather:[O.EqnArray,null,!0,!0,"c","m"],"gather*":[O.EqnArray,null,!1,!0,"c","m"],alignat:[O.AlignAt,null,!0,!0],"alignat*":[O.AlignAt,null,!1,!0],alignedat:[O.AlignAt,null,!1,!1],aligned:[O.AmsEqnArray,null,null,null,"rl","bt",p.cols(0,2),".5em","D"],gathered:[O.AmsEqnArray,null,null,null,"c","m",null,".5em","D"],xalignat:[O.XalignAt,null,!0,!0],"xalignat*":[O.XalignAt,null,!1,!0],xxalignat:[O.XalignAt,null,!1,!1],flalign:[O.FlalignArray,null,!0,!1,!0,"rlc","btm","auto auto fit"],"flalign*":[O.FlalignArray,null,!1,!1,!0,"rlc","btm","auto auto fit"],subarray:[O.Array,null,null,null,null,p.cols(0),"0.1em","S",!0],smallmatrix:[O.Array,null,null,null,"c",p.cols(1/3),".2em","S",!0],matrix:[O.Array,null,null,null,"c"],pmatrix:[O.Array,null,"(",")","c"],bmatrix:[O.Array,null,"[","]","c"],Bmatrix:[O.Array,null,"\\{","\\}","c"],vmatrix:[O.Array,null,"\\vert","\\vert","c"],Vmatrix:[O.Array,null,"\\Vert","\\Vert","c"],cases:[O.Array,null,"\\{",".","ll",null,".2em","T"]}),new D("AMSmath-delimiter",M.delimiter,{"\\lvert":["|",{texClass:N.OPEN}],"\\rvert":["|",{texClass:N.CLOSE}],"\\lVert":["\u2016",{texClass:N.OPEN}],"\\rVert":["\u2016",{texClass:N.CLOSE}]}),new V("AMSsymbols-mathchar0mi",M.mathchar0mi,{digamma:"\u03dd",varkappa:"\u03f0",varGamma:["\u0393",{mathvariant:b.Variant.ITALIC}],varDelta:["\u0394",{mathvariant:b.Variant.ITALIC}],varTheta:["\u0398",{mathvariant:b.Variant.ITALIC}],varLambda:["\u039b",{mathvariant:b.Variant.ITALIC}],varXi:["\u039e",{mathvariant:b.Variant.ITALIC}],varPi:["\u03a0",{mathvariant:b.Variant.ITALIC}],varSigma:["\u03a3",{mathvariant:b.Variant.ITALIC}],varUpsilon:["\u03a5",{mathvariant:b.Variant.ITALIC}],varPhi:["\u03a6",{mathvariant:b.Variant.ITALIC}],varPsi:["\u03a8",{mathvariant:b.Variant.ITALIC}],varOmega:["\u03a9",{mathvariant:b.Variant.ITALIC}],beth:"\u2136",gimel:"\u2137",daleth:"\u2138",backprime:["\u2035",{variantForm:!0}],hslash:"\u210f",varnothing:["\u2205",{variantForm:!0}],blacktriangle:"\u25b4",triangledown:["\u25bd",{variantForm:!0}],blacktriangledown:"\u25be",square:"\u25fb",Box:"\u25fb",blacksquare:"\u25fc",lozenge:"\u25ca",Diamond:"\u25ca",blacklozenge:"\u29eb",circledS:["\u24c8",{mathvariant:b.Variant.NORMAL}],bigstar:"\u2605",sphericalangle:"\u2222",measuredangle:"\u2221",nexists:"\u2204",complement:"\u2201",mho:"\u2127",eth:["\xf0",{mathvariant:b.Variant.NORMAL}],Finv:"\u2132",diagup:"\u2571",Game:"\u2141",diagdown:"\u2572",Bbbk:["k",{mathvariant:b.Variant.DOUBLESTRUCK}],yen:"\xa5",circledR:"\xae",checkmark:"\u2713",maltese:"\u2720"}),new V("AMSsymbols-mathchar0mo",M.mathchar0mo,{dotplus:"\u2214",ltimes:"\u22c9",smallsetminus:["\u2216",{variantForm:!0}],rtimes:"\u22ca",Cap:"\u22d2",doublecap:"\u22d2",leftthreetimes:"\u22cb",Cup:"\u22d3",doublecup:"\u22d3",rightthreetimes:"\u22cc",barwedge:"\u22bc",curlywedge:"\u22cf",veebar:"\u22bb",curlyvee:"\u22ce",doublebarwedge:"\u2a5e",boxminus:"\u229f",circleddash:"\u229d",boxtimes:"\u22a0",circledast:"\u229b",boxdot:"\u22a1",circledcirc:"\u229a",boxplus:"\u229e",centerdot:["\u22c5",{variantForm:!0}],divideontimes:"\u22c7",intercal:"\u22ba",leqq:"\u2266",geqq:"\u2267",leqslant:"\u2a7d",geqslant:"\u2a7e",eqslantless:"\u2a95",eqslantgtr:"\u2a96",lesssim:"\u2272",gtrsim:"\u2273",lessapprox:"\u2a85",gtrapprox:"\u2a86",approxeq:"\u224a",lessdot:"\u22d6",gtrdot:"\u22d7",lll:"\u22d8",llless:"\u22d8",ggg:"\u22d9",gggtr:"\u22d9",lessgtr:"\u2276",gtrless:"\u2277",lesseqgtr:"\u22da",gtreqless:"\u22db",lesseqqgtr:"\u2a8b",gtreqqless:"\u2a8c",doteqdot:"\u2251",Doteq:"\u2251",eqcirc:"\u2256",risingdotseq:"\u2253",circeq:"\u2257",fallingdotseq:"\u2252",triangleq:"\u225c",backsim:"\u223d",thicksim:["\u223c",{variantForm:!0}],backsimeq:"\u22cd",thickapprox:["\u2248",{variantForm:!0}],subseteqq:"\u2ac5",supseteqq:"\u2ac6",Subset:"\u22d0",Supset:"\u22d1",sqsubset:"\u228f",sqsupset:"\u2290",preccurlyeq:"\u227c",succcurlyeq:"\u227d",curlyeqprec:"\u22de",curlyeqsucc:"\u22df",precsim:"\u227e",succsim:"\u227f",precapprox:"\u2ab7",succapprox:"\u2ab8",vartriangleleft:"\u22b2",lhd:"\u22b2",vartriangleright:"\u22b3",rhd:"\u22b3",trianglelefteq:"\u22b4",unlhd:"\u22b4",trianglerighteq:"\u22b5",unrhd:"\u22b5",vDash:"\u22a8",Vdash:"\u22a9",Vvdash:"\u22aa",smallsmile:["\u2323",{variantForm:!0}],shortmid:["\u2223",{variantForm:!0}],smallfrown:["\u2322",{variantForm:!0}],shortparallel:["\u2225",{variantForm:!0}],bumpeq:"\u224f",between:"\u226c",Bumpeq:"\u224e",pitchfork:"\u22d4",varpropto:["\u221d",{variantForm:!0}],backepsilon:"\u220d",blacktriangleleft:"\u25c2",blacktriangleright:"\u25b8",therefore:"\u2234",because:"\u2235",eqsim:"\u2242",vartriangle:["\u25b3",{variantForm:!0}],Join:"\u22c8",nless:"\u226e",ngtr:"\u226f",nleq:"\u2270",ngeq:"\u2271",nleqslant:["\u2a87",{variantForm:!0}],ngeqslant:["\u2a88",{variantForm:!0}],nleqq:["\u2270",{variantForm:!0}],ngeqq:["\u2271",{variantForm:!0}],lneq:"\u2a87",gneq:"\u2a88",lneqq:"\u2268",gneqq:"\u2269",lvertneqq:["\u2268",{variantForm:!0}],gvertneqq:["\u2269",{variantForm:!0}],lnsim:"\u22e6",gnsim:"\u22e7",lnapprox:"\u2a89",gnapprox:"\u2a8a",nprec:"\u2280",nsucc:"\u2281",npreceq:["\u22e0",{variantForm:!0}],nsucceq:["\u22e1",{variantForm:!0}],precneqq:"\u2ab5",succneqq:"\u2ab6",precnsim:"\u22e8",succnsim:"\u22e9",precnapprox:"\u2ab9",succnapprox:"\u2aba",nsim:"\u2241",ncong:"\u2247",nshortmid:["\u2224",{variantForm:!0}],nshortparallel:["\u2226",{variantForm:!0}],nmid:"\u2224",nparallel:"\u2226",nvdash:"\u22ac",nvDash:"\u22ad",nVdash:"\u22ae",nVDash:"\u22af",ntriangleleft:"\u22ea",ntriangleright:"\u22eb",ntrianglelefteq:"\u22ec",ntrianglerighteq:"\u22ed",nsubseteq:"\u2288",nsupseteq:"\u2289",nsubseteqq:["\u2288",{variantForm:!0}],nsupseteqq:["\u2289",{variantForm:!0}],subsetneq:"\u228a",supsetneq:"\u228b",varsubsetneq:["\u228a",{variantForm:!0}],varsupsetneq:["\u228b",{variantForm:!0}],subsetneqq:"\u2acb",supsetneqq:"\u2acc",varsubsetneqq:["\u2acb",{variantForm:!0}],varsupsetneqq:["\u2acc",{variantForm:!0}],leftleftarrows:"\u21c7",rightrightarrows:"\u21c9",leftrightarrows:"\u21c6",rightleftarrows:"\u21c4",Lleftarrow:"\u21da",Rrightarrow:"\u21db",twoheadleftarrow:"\u219e",twoheadrightarrow:"\u21a0",leftarrowtail:"\u21a2",rightarrowtail:"\u21a3",looparrowleft:"\u21ab",looparrowright:"\u21ac",leftrightharpoons:"\u21cb",rightleftharpoons:["\u21cc",{variantForm:!0}],curvearrowleft:"\u21b6",curvearrowright:"\u21b7",circlearrowleft:"\u21ba",circlearrowright:"\u21bb",Lsh:"\u21b0",Rsh:"\u21b1",upuparrows:"\u21c8",downdownarrows:"\u21ca",upharpoonleft:"\u21bf",upharpoonright:"\u21be",downharpoonleft:"\u21c3",restriction:"\u21be",multimap:"\u22b8",downharpoonright:"\u21c2",leftrightsquigarrow:"\u21ad",rightsquigarrow:"\u21dd",leadsto:"\u21dd",dashrightarrow:"\u21e2",dashleftarrow:"\u21e0",nleftarrow:"\u219a",nrightarrow:"\u219b",nLeftarrow:"\u21cd",nRightarrow:"\u21cf",nleftrightarrow:"\u21ae",nLeftrightarrow:"\u21ce"}),new D("AMSsymbols-delimiter",M.delimiter,{"\\ulcorner":"\u231c","\\urcorner":"\u231d","\\llcorner":"\u231e","\\lrcorner":"\u231f"}),new H("AMSsymbols-macros",{implies:[O.Macro,"\\;\\Longrightarrow\\;"],impliedby:[O.Macro,"\\;\\Longleftarrow\\;"]});const j=MathJax._.input.tex.newcommand.NewcommandConfiguration,U=j.NewcommandConfig;j.NewcommandConfiguration;class X extends q{}const K=c.create("ams",{[o.HANDLER]:{[s.CHARACTER]:["AMSmath-operatorLetter"],[s.DELIMITER]:["AMSsymbols-delimiter","AMSmath-delimiter"],[s.MACRO]:["AMSsymbols-mathchar0mi","AMSsymbols-mathchar0mo","AMSsymbols-delimiter","AMSsymbols-macros","AMSmath-mathchar0mo","AMSmath-macros","AMSmath-delimiter"],[s.ENVIRONMENT]:["AMSmath-environment"]},[o.ITEMS]:{[v.prototype.kind]:v,[w.prototype.kind]:w},[o.TAGS]:{ams:X},[o.OPTIONS]:{multlineWidth:"",ams:{operatornamePattern:/^[-*a-zA-Z]+/,multlineWidth:"100%",multlineIndent:"1em"}},[o.CONFIG]:U});MathJax.loader&&MathJax.loader.checkVersion("[tex]/ams","4.0.0","tex-extension"),i({_:{input:{tex:{ams:{AmsConfiguration:r,AmsItems:e,AmsMethods:a}}}}})})();