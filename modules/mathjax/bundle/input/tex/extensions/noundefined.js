(()=>{"use strict";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};e.r(n),e.d(n,{NoUndefinedConfiguration:()=>f});const o=("undefined"!=typeof window?window:global).MathJax._.components.global,t=(o.GLOBAL,o.isObject,o.combineConfig,o.combineDefaults,o.combineWithMathJax),i=(o.MathJax,MathJax._.input.tex.HandlerTypes),a=i.ConfigurationType,r=i.HandlerType,d=MathJax._.input.tex.Configuration,u=d.Configuration;d.ConfigurationHandler,d.ParserConfiguration;const f=u.create("noundefined",{[a.FALLBACK]:{[r.MACRO]:function(e,n){const o=e.create("text","\\"+n),t=e.options.noundefined,i={};for(const e of["color","background","size"])t[e]&&(i["math"+e]=t[e]);e.Push(e.create("node","mtext",[],i,o))}},[a.OPTIONS]:{noundefined:{color:"red",background:"",size:""}},[a.PRIORITY]:3});MathJax.loader&&MathJax.loader.checkVersion("[tex]/noundefined","4.0.0","tex-extension"),t({_:{input:{tex:{noundefined:{NoUndefinedConfiguration:n}}}}})})();