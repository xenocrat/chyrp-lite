(()=>{"use strict";var t={d:(o,a)=>{for(var e in a)t.o(a,e)&&!t.o(o,e)&&Object.defineProperty(o,e,{enumerable:!0,get:a[e]})},o:(t,o)=>Object.prototype.hasOwnProperty.call(t,o),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},o={};t.r(o),t.d(o,{TagFormatConfiguration:()=>c,tagformatConfig:()=>u});const a=("undefined"!=typeof window?window:global).MathJax._.components.global,e=(a.GLOBAL,a.isObject,a.combineConfig,a.combineDefaults,a.combineWithMathJax),n=(a.MathJax,MathJax._.input.tex.HandlerTypes),r=n.ConfigurationType,s=(n.HandlerType,MathJax._.input.tex.Configuration),i=s.Configuration,g=(s.ConfigurationHandler,s.ParserConfiguration,MathJax._.input.tex.Tags),p=(g.Label,g.TagInfo,g.AbstractTags,g.NoTags,g.AllTags,g.TagsFactory);let f=0;function u(t,o){const a=o.parseOptions.options.tags;"base"!==a&&Object.hasOwn(t.tags,a)&&p.add(a,t.tags[a]);const e=p.create(o.parseOptions.options.tags).constructor;f++;const n="configTags-"+f;p.add(n,class extends e{formatNumber(t){return o.parseOptions.options.tagformat.number(t)}formatTag(t){return o.parseOptions.options.tagformat.tag(t)}formatRef(t){const a=o.parseOptions.options.tagformat.ref;return a?a(t):this.formatTag(t)}formatId(t){return o.parseOptions.options.tagformat.id(t)}formatUrl(t,a){return o.parseOptions.options.tagformat.url(t,a)}}),o.parseOptions.options.tags=n}const c=i.create("tagformat",{[r.CONFIG]:[u,10],[r.OPTIONS]:{tagformat:{number:t=>t.toString(),tag:t=>"("+t+")",ref:"",id:t=>"mjx-eqn:"+t.replace(/\s/g,"_"),url:(t,o)=>o+"#"+encodeURIComponent(t)}}});MathJax.loader&&MathJax.loader.checkVersion("[tex]/tagformat","4.0.0","tex-extension"),e({_:{input:{tex:{tagformat:{TagFormatConfiguration:o}}}}})})();