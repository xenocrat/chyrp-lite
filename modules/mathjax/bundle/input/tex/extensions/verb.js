(()=>{"use strict";var e={d:(t,n)=>{for(var a in n)e.o(n,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:n[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{VerbConfiguration:()=>b});const n=("undefined"!=typeof window?window:global).MathJax._.components.global,a=(n.GLOBAL,n.isObject,n.combineConfig,n.combineDefaults,n.combineWithMathJax),r=(n.MathJax,MathJax._.input.tex.HandlerTypes),o=r.ConfigurationType,i=r.HandlerType,s=MathJax._.input.tex.Configuration,l=s.Configuration,p=(s.ConfigurationHandler,s.ParserConfiguration,MathJax._.input.tex.TexConstants.TexConstant),g=MathJax._.input.tex.TokenMap,c=(g.parseResult,g.AbstractTokenMap,g.RegExpMap,g.AbstractParseMap,g.CharacterMap,g.DelimiterMap,g.MacroMap,g.CommandMap),u=(g.EnvironmentMap,MathJax._.input.tex.TexError.default);new c("verb",{verb:{Verb(e,t){const n=e.GetNext(),a=++e.i;if(""===n)throw new u("MissingArgFor","Missing argument for %1",t);for(;e.i<e.string.length&&e.string.charAt(e.i)!==n;)e.i++;if(e.i===e.string.length)throw new u("NoClosingDelim","Can't find closing delimiter for %1",e.currentCS);const r=e.string.slice(a,e.i).replace(/ /g,"\xa0");e.i++,e.Push(e.create("token","mtext",{mathvariant:p.Variant.MONOSPACE},r))}}.Verb});const b=l.create("verb",{[o.HANDLER]:{[i.MACRO]:["verb"]}});MathJax.loader&&MathJax.loader.checkVersion("[tex]/verb","4.0.0","tex-extension"),a({_:{input:{tex:{verb:{VerbConfiguration:t}}}}})})();